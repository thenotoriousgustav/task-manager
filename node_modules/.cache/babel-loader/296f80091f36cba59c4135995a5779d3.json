{"ast":null,"code":"import _slicedToArray from \"/Users/melissafrd/Documents/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/melissafrd/Documents/todo-app/src/components/TaskForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TaskListContext } from '../contexts/TaskListContext';\n\nconst TaskForm = () => {\n  const _useContext = useContext(TaskListContext),\n        addTask = _useContext.addTask,\n        clearList = _useContext.clearList,\n        editTask = _useContext.editTask,\n        editItem = _useContext.editItem;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!editItem) {\n      addTask(title);\n      setTitle('');\n    } else {\n      editTask(title, editItem.id);\n    }\n  };\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n      console.log(editItem);\n    } else {\n      setTitle('');\n    }\n  }, [editItem]);\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add Task...\",\n    value: title,\n    onChange: handleChange,\n    required: true,\n    className: \"task-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn add-task-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, editItem ? 'Edit Tas' : 'Add Task'), React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: clearList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default TaskForm;","map":{"version":3,"sources":["/Users/melissafrd/Documents/todo-app/src/components/TaskForm.js"],"names":["React","useState","useContext","useEffect","TaskListContext","TaskForm","addTask","clearList","editTask","editItem","title","setTitle","handleSubmit","e","preventDefault","id","handleChange","target","value","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,sBAC8BH,UAAU,CAACE,eAAD,CADxC;AAAA,QACbE,OADa,eACbA,OADa;AAAA,QACJC,SADI,eACJA,SADI;AAAA,QACOC,QADP,eACOA,QADP;AAAA,QACiBC,QADjB,eACiBA,QADjB;;AAAA,oBAEKR,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEdS,KAFc;AAAA,QAEPC,QAFO;;AAIrB,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACL,QAAL,EAAe;AACbH,MAAAA,OAAO,CAACI,KAAD,CAAP;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAHD,MAGO;AACLH,MAAAA,QAAQ,CAACE,KAAD,EAAQD,QAAQ,CAACM,EAAjB,CAAR;AACD;AACF,GARD;;AAUA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAJ,EAAc;AACZE,MAAAA,QAAQ,CAACF,QAAQ,CAACC,KAAV,CAAR;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACD,KAHD,MAGO;AACLE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAPQ,EAON,CAACF,QAAD,CAPM,CAAT;AASA,SACE;AAAM,IAAA,QAAQ,EAAEG,YAAhB;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,QAAQ,EAAEM,YAJZ;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,SAAS,EAAC,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,GAAG,UAAH,GAAgB,UAD3B,CADF,EAIE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEF,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CATF,CADF;AAoBD,CA/CD;;AAiDA,eAAeF,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { TaskListContext } from '../contexts/TaskListContext'\n\nconst TaskForm = () => {\n  const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\n  const [title, setTitle] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!editItem) {\n      addTask(title)\n      setTitle('')\n    } else {\n      editTask(title, editItem.id)\n    }\n  }\n\n  const handleChange = e => {\n    setTitle(e.target.value)\n  }\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title)\n      console.log(editItem)\n    } else {\n      setTitle('')\n    }\n  }, [editItem])\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input\n        type=\"text\"\n        placeholder=\"Add Task...\"\n        value={title}\n        onChange={handleChange}\n        required\n        className=\"task-input\"\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"btn add-task-btn\">\n          {editItem ? 'Edit Tas' : 'Add Task'}\n        </button>\n        <button className=\"btn clear-btn\" onClick={clearList}>\n          Clear\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default TaskForm\n"]},"metadata":{},"sourceType":"module"}